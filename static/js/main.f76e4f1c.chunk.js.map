{"version":3,"sources":["App.js","serviceWorker.js","index.js"],"names":["api","plimit","ccxt","binance","proxy","Axios","create","baseURL","service","fetchOhlcv","get","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","market","chunk","base","search","fetchLocalData","localData","JSON","parse","localStorage","getItem","fetchAllTickers","asyncToGenerator","regenerator_default","a","mark","_callee","_ref2","data","addExtraData","wrap","_context","prev","next","sent","map","item","objectSpread","id","symbol","bg","console","log","setState","getSocket","stop","_callee2","_ref4","_context2","t0","renderIndicator","_ref5","index","key","style","filteredData","filter","indexOf","toUpperCase","react_default","createElement","View","flexDirection","justifyContent","flex","App_TextCenter","text","Number","ticker","last","toFixed","backgroundColor","bold","percentage","r3","r2","r1","p","s1","s2","s3","socket","WebSocket","_this2","onmessage","_ref6","find","ws","s","c","_this3","width","borderColor","position","left","top","paddingTop","zIndex","alignItems","Text","Picker","selectedValue","height","onValueChange","itemValue","itemIndex","Item","label","value","TextInput","onChange","_ref7","target","borderWidth","App_HeaderIndicator","es","marginTop","rowCount","length","rowRenderer","window","innerWidth","innerHeight","rowHeight","React","PureComponent","HeaderIndicator","alignContent","TextCenter","_ref8","fontWeight","Boolean","location","hostname","match","AppRegistry","registerComponent","runApplication","initialProps","rootTag","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f76e4f1c.chunk.js","sourcesContent":["import React, { Component } from \"react\";\nimport \"./App.css\";\nimport ccxt from \"ccxt\";\nimport { FlatList, View, Text, Picker, TextInput } from \"react-native\";\nimport { pivotFib } from \"./utils/Indicator\";\nimport { List, AutoSizer } from \"react-virtualized\";\nimport plimit from \"p-limit\";\nimport Axios from \"axios\";\n\nconst limit = plimit(3);\nconst binance = new ccxt.binance({\n\tproxy: \"https://cors-anywhere.herokuapp.com/\"\n});\n\nconst api = Axios.create({\n\tbaseURL: \"https://telegrafme.herokuapp.com/indicator/\"\n});\n\nconst service = {\n\tfetchOhlcv: () => api.get(\"/binance\")\n};\nconst sleep = ms => new Promise(resolve => setTimeout(resolve, ms));\nclass App extends React.PureComponent {\n\tconstructor() {\n\t\tsuper();\n\t\tthis.socket = new WebSocket(\n\t\t\t\"wss://stream.binance.com:9443/ws/!miniTicker@arr@3000ms\"\n\t\t);\n\t}\n\tstate = {\n\t\tmarket: [],\n\t\tchunk: [],\n\t\tbase: \"BTC\",\n\t\tsearch: \"\"\n\t};\n\tcomponentDidMount() {\n\t\tthis.fetchLocalData();\n\t\tthis.fetchAllTickers();\n\t}\n\n\tfetchLocalData = () => {\n\t\tthis.localData = JSON.parse(localStorage.getItem(\"ohlcvData\"));\n\t};\n\n\tfetchAllTickers = async () => {\n\t\t// const tickers = await binance.fetchTickers();\n\n\t\t// const data = Object.values(tickers);\n    const { data } = await service.fetchOhlcv();\n    \n\n\t\tconst addExtraData = data.map(item => ({\n\t\t\t...item,\n\t\t\tid: item.symbol,\n\t\t\tbg: \"white\"\n\t\t}));\n\n\t\tconsole.log(addExtraData);\n\n\t\tthis.fetchLocalData();\n\n\t\tthis.setState({ market: addExtraData }, () => {\n\t\t\tthis.getSocket();\n\t\t});\n\t};\n\n\tfetchOhlcv = async () => {\n\t\ttry {\n\t\t\tconst { data } = await service.fetchOhlcv();\n\n\t\t\tconsole.log(data);\n\t\t\t// data.map(market => {\n\t\t\t// \tthis.setState(state => ({\n\t\t\t// \t\tmarket: state.market.map(item =>\n\t\t\t// \t\t\titem.id === market.symbol ? { ...item, ohlcv:market.data, data:market.ohlcv } : { ...item }\n\t\t\t// \t\t)\n\t\t\t//   }));\n\t\t\t// })\n\n\t\t\tthis.getSocket();\n\t\t} catch (error) {\n\t\t\tconsole.log(error);\n\t\t}\n\t};\n\n\tgetSocket() {\n\t\tthis.socket.onmessage = ({ data }) => {\n\t\t\tthis.setState(state => ({\n\t\t\t\tmarket: state.market.map(item => {\n\t\t\t\t\tconst last = JSON.parse(data).find(ws => ws.s === item.id);\n\t\t\t\t\treturn {\n\t\t\t\t\t\t...item,\n\t\t\t\t\t\tlast: last ? Number(last.c) : Number(item.last),\n\t\t\t\t\t\tbg: last\n\t\t\t\t\t\t\t? Number(last.c) > Number(item.last)\n\t\t\t\t\t\t\t\t? \"#42f474\"\n\t\t\t\t\t\t\t\t: Number(last.c) < Number(item.last)\n\t\t\t\t\t\t\t\t? \"#f44141\"\n\t\t\t\t\t\t\t\t: \"white\"\n\t\t\t\t\t\t\t: item.bg\n\t\t\t\t\t};\n\t\t\t\t})\n\t\t\t}));\n\t\t};\n\t}\n\n\trenderIndicator = ({ index, key, style }) => {\n\t\tconst filterBase = this.state.market.filter(\n\t\t\titem => item.base === this.state.base\n\t\t);\n\n\t\tconst filteredData = filterBase.filter(\n\t\t\titem => item.id.indexOf(this.state.search.toUpperCase()) !== -1\n\t\t);\n\t\treturn (\n\t\t\t<View\n\t\t\t\tstyle={[\n\t\t\t\t\t{\n\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\tjustifyContent: \"space-between\",\n\t\t\t\t\t\tflex: 1\n\t\t\t\t\t},\n\t\t\t\t\tstyle\n\t\t\t\t]}\n\t\t\t\tkey={key}\n\t\t\t>\n\t\t\t\t<TextCenter\n\t\t\t\t\ttext={filteredData[index].symbol && filteredData[index].symbol}\n\t\t\t\t/>\n\t\t\t\t{\n\t\t\t\t\t<TextCenter\n\t\t\t\t\t\ttext={Number(\n\t\t\t\t\t\t\t!!filteredData[index].ticker && filteredData[index].ticker.last\n\t\t\t\t\t\t).toFixed(8)}\n\t\t\t\t\t\tbackgroundColor={filteredData[index].bg}\n\t\t\t\t\t\tbold\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t{\n\t\t\t\t\t<TextCenter\n\t\t\t\t\t\ttext={Number(\n\t\t\t\t\t\t\t!!filteredData[index].ticker &&\n\t\t\t\t\t\t\t\tfilteredData[index].ticker.percentage\n\t\t\t\t\t\t).toFixed(2)}\n\t\t\t\t\t\tpercentage\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t{<TextCenter text={filteredData[index].data.r3} />}\n\t\t\t\t{<TextCenter text={filteredData[index].data.r2} />}\n\t\t\t\t{<TextCenter text={filteredData[index].data.r1} />}\n\t\t\t\t{<TextCenter text={filteredData[index].data.p} />}\n\t\t\t\t{<TextCenter text={filteredData[index].data.s1} />}\n\t\t\t\t{<TextCenter text={filteredData[index].data.s2} />}\n\t\t\t\t{<TextCenter text={filteredData[index].data.s3} />}\n\t\t\t</View>\n\t\t);\n\t};\n\trender() {\n\t\tconst filterBase = this.state.market.filter(\n\t\t\titem => item.base === this.state.base\n\t\t);\n\n\t\tconst filteredData = filterBase.filter(\n\t\t\titem => item.id.indexOf(this.state.search.toUpperCase()) !== -1\n\t\t);\n\n\t\treturn (\n\t\t\t<View>\n\t\t\t\t<View\n\t\t\t\t\tstyle={{\n\t\t\t\t\t\twidth: \"100%\",\n\t\t\t\t\t\tbackgroundColor: \"white\",\n\t\t\t\t\t\tborderColor: \"black\",\n\t\t\t\t\t\tposition: \"fixed\",\n\t\t\t\t\t\tleft: 10,\n\t\t\t\t\t\ttop: 0,\n\t\t\t\t\t\tpaddingTop: 10,\n\t\t\t\t\t\tzIndex: 1,\n\t\t\t\t\t\tflexDirection: \"row\",\n\t\t\t\t\t\talignItems: \"center\"\n\t\t\t\t\t}}\n\t\t\t\t>\n\t\t\t\t\t<Text>Base Pair : </Text>\n\t\t\t\t\t<Picker\n\t\t\t\t\t\tselectedValue={this.state.base}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\theight: 30,\n\t\t\t\t\t\t\twidth: 100\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tonValueChange={(itemValue, itemIndex) =>\n\t\t\t\t\t\t\tthis.setState({ base: itemValue })\n\t\t\t\t\t\t}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Picker.Item label=\"BTC\" value=\"BTC\" />\n\t\t\t\t\t\t<Picker.Item label=\"USDT\" value=\"USDT\" />\n\t\t\t\t\t\t<Picker.Item label=\"TUSD\" value=\"TUSD\" />\n\t\t\t\t\t\t<Picker.Item label=\"PAX\" value=\"PAX\" />\n\t\t\t\t\t\t<Picker.Item label=\"ETH\" value=\"ETH\" />\n\t\t\t\t\t</Picker>\n\n\t\t\t\t\t<View\n\t\t\t\t\t\tstyle={{ flexDirection: \"row\", alignItems: \"center\", width: \"20%\" }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Text>Pagination : </Text>\n\t\t\t\t\t</View>\n\t\t\t\t\t<Text>Search :</Text>\n\t\t\t\t\t<TextInput\n\t\t\t\t\t\tonChange={({ target: { value } }) =>\n\t\t\t\t\t\t\tthis.setState({ search: value })\n\t\t\t\t\t\t}\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tborderColor: \"black\",\n\t\t\t\t\t\t\twidth: 100,\n\t\t\t\t\t\t\theight: 25,\n\t\t\t\t\t\t\tborderWidth: 1\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</View>\n\t\t\t\t<HeaderIndicator />\n{/* \n\t\t\t\t<AutoSizer>\n\t\t\t\t\t{({ width, height }) => ( */}\n\t\t\t\t\t\t<List\n\t\t\t\t\t\t\tstyle={{ marginTop: 80 }}\n\t\t\t\t\t\t\trowCount={filteredData.length}\n\t\t\t\t\t\t\trowRenderer={this.renderIndicator}\n\t\t\t\t\t\t\twidth={window.innerWidth-20}\n\t\t\t\t\t\t\theight={window.innerHeight-80}\n\t\t\t\t\t\t\trowHeight={50}\n\t\t\t\t\t\t/>\n\t\t\t\t{/* // \t)}\n\t\t\t\t// </AutoSizer> */}\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nconst HeaderIndicator = () => (\n\t<View\n\t\tstyle={{\n\t\t\tflexDirection: \"row\",\n\t\t\tjustifyContent: \"space-between\",\n\t\t\twidth: \"100%\",\n\t\t\talignItems: \"center\",\n\t\t\tposition: \"fixed\",\n\t\t\ttop: 40,\n\t\t\tzIndex: 1,\n\t\t\tborderColor: \"black\",\n\t\t\tbackgroundColor: \"white\",\n\t\t\tborderWidth: 1\n\t\t}}\n\t>\n\t\t<TextCenter bold text=\"Pair\" />\n\t\t<TextCenter bold text=\"Last Price\" />\n\t\t<TextCenter bold text=\"24h Chg%\" />\n\t\t<View style={{ width: \"100%\" }}>\n\t\t\t<View style={{ alignContent: \"center\" }}>\n\t\t\t\t<Text> Pivot Fibonnaci Weekly</Text>\n\t\t\t</View>\n\t\t\t<View style={{ flexDirection: \"row\", width: \"100%\" }}>\n\t\t\t\t<TextCenter bold text=\"R3\" />\n\t\t\t\t<TextCenter bold text=\"R2\" />\n\t\t\t\t<TextCenter bold text=\"R1\" />\n\t\t\t\t<TextCenter bold text=\"P\" />\n\t\t\t\t<TextCenter bold text=\"S1\" />\n\t\t\t\t<TextCenter bold text=\"S2\" />\n\t\t\t\t<TextCenter bold text=\"S3\" />\n\t\t\t</View>\n\t\t</View>\n\t</View>\n);\n\nconst TextCenter = ({ text, percentage, bold, backgroundColor }) => (\n\t<View style={{ width: \"10%\", alignItems: \"center\", backgroundColor }}>\n\t\t<Text style={{ fontWeight: bold ? \"bold\" : \"normal\" }}>\n\t\t\t{text} {percentage ? \"%\" : \"\"}\n\t\t</Text>\n\t</View>\n);\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import \"bootstrap/dist/css/bootstrap.min.css\"\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { AppRegistry } from 'react-native';\nimport 'react-virtualized/styles.css'\n\nAppRegistry.registerComponent('App', () => App);\n\nAppRegistry.runApplication('App', {\n  initialProps: {},\n  rootTag: document.getElementById('root')\n});\n// ReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}